/*===================================================
	XmlDomTest05.java 
	- 콘솔 기반 자바 프로그램
	- XML DOM 활용 → 원격 (remote) XML 읽어내기
	(http://www.kma.go.kr/weather/forecast/mid-term-rss3.jsp?stnId=109)
===================================================*/



package com.test;

import java.io.InputStream;
import java.net.URL;
import java.util.Scanner;

import javax.xml.crypto.dsig.XMLObject;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;


public class XmlDomTest06
{
	public static void main(String[] args)
	{
	Scanner sc = new Scanner(System.in);
	String[] stnId = {"108","109","105","131","133","146","156","143","159","184"};
	
		try
		{	
			// 1. XML 파일 메모리에 로드
			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
			DocumentBuilder builder = factory.newDocumentBuilder();
			Document xmlObj = null;	
			
			// Local XML 파일인 경우 ...
			// String ulr = "rss.xml";
			// xmlObj = builder.parse(url);
			
			// Remot XMl 파일인 경우
			
			// 외부의 입력값 처리 
			System.out.println("■■■ 기상청 육상 중기 예보 ■■■");
			System.out.println("----------------------------------");
			System.out.println("stnId=108	전국");
			System.out.println("stnId=109	서울,경기");
			System.out.println("stnId=105	강원");
			System.out.println("stnId=131	충북");
			System.out.println("stnId=133	충남");
			System.out.println("stnId=146	전북");
			System.out.println("stnId=156	전남");
			System.out.println("stnId=143	경북");
			System.out.println("stnId=159	경남");
			System.out.println("stnId=184	제주특별자치도");
			System.out.println("-----------------------------------");
			System.out.println(">> 지역 선택(종료)");
			
			String m = sc.next();
			
			if (m.equals("0")) 
			{
				break;
			}
			
			String str = String.format("http://www.kma.go.kr/weather/forecast/mid-term-rss3.jsp?stnId=109", stnId[Integer.parseInt(m)-1]);
			
			// 확인 
			System.out.println(str);
			
			// URL 객체 구성
			URL url = new URL(str);
			
			// URL로 접근하여 데이터 내용 읽어오기(스트림)
			InputSource is = new InputSource(url.openStream());
			//xmlObj = builder.parse(is);
			
			// 루트 엘리먼트 접근

			Element root = xmlObj.getDocumentElement();
			
			// 3-1. 타이틀 추출하기
			Node itemNode = root.getElementsByTagName("item").item(0);
			Element itemElement = (Element)itemNode;
			
			System.out.printf("%s%n%n", XMLDOM.getText(itemElement, "title"));
			//--==>> 서울,경기도 육상 중기예보 - 2021년 12월 27일 (월)요일 06:00 발표

			// 3-2. 기상전망 추출하기
			Node wfNode = root.getElementsByTagName("wf").item(0);
			Element wfElement = (Element)wfNode;
			
			System.out.println("[기상전망]---------------------------------------------------------------");
			System.out.printf("%s%n%n", wfElement.getTextContent().replaceAll("<br />", "\n"));			
			
			
			//3-3. 도시별 기상 예보 추출하기
			System.out.println("[육상날씨]---------------------------------------------------------------");
			NodeList locationNodeList = root.getElementsByTagName("location");
			
			for (int i = 0; i < locationNodeList.getLength(); i++)
			{
				Node locationNode = locationNodeList.item(i);
				Element locationElement = (Element)locationNode;
				
				System.out.printf("도시 : %s%n", XMLDOM.getText(locationElement, "city"));
				System.out.println("---------------------------------------------------------------");
				NodeList dataNodeList = locationElement.getElementsByTagName("data");
				
				for (int j = 0; j < dataNodeList.getLength(); j++)
				{
					Node dataNode = dataNodeList.item(j);
					Element dataElement = (Element)dataNode;
					
					System.out.printf("   %s / %s / %s ~ %s / %s%n"
								, XMLDOM.getText(dataElement, "tmEf")		// 날짜 시간
								, XMLDOM.getText(dataElement, "wf")			// 날씨 예보
								, XMLDOM.getText(dataElement, "tmn")		// 최저 온도
								, XMLDOM.getText(dataElement, "tmx")		// 최고 온도
								, XMLDOM.getText(dataElement, "rnSt"));		// 강수 확률
				}
				System.out.println("---------------------------------------------------------------");
			}			
			
			
			
		}
		catch(Exception e)
		{
			System.out.println(e.toString());
		}
	}
}
